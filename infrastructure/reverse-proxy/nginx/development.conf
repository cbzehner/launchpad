# HTTP â€” redirect all traffic to HTTPS
server {
    listen 80;
    # listen [::]:80 default_server ipv6only=on;

    # Here put the domain name the server is to be known as.
    server_name  launchpad.rs www.launchpad.rs;
    access_log   /dev/stdout  main;
    error_log    /dev/stdout info;

    # This is for handling the ACME challenge.
    location /.well-known/acme-challenge/ {
        root /webroot/well-known/acme-challenge/;
    }

    # Use this for a static HTML site, specifically the default
    # site supplied with the default Nginx container
    # location / {
    #     root   /usr/share/nginx/html;
    #     index  index.html index.htm;
    # }

    # Proxy the Websocket used for local development directly to the web container
    location /sockjs-node {
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;

        proxy_pass http://web:4435;

        proxy_redirect off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Use this to proxy for another service
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass       http://oathkeeper:4455;
        proxy_set_header Host $http_host;
    }

    # Use this to force a redirect to the SSL/HTTPS site
    # return 301 https://$host$request_uri;
}