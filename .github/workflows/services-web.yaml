name: Web

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths:
      - .github/workflows/services-web.yaml
      - services/web/**

defaults:
  run:
    working-directory: services/web

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('services/web/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: extractions/setup-just@v1
      - name: Initialize dependencies
        run: just initialize
      - name: Verify formatting and compilation succeeds
        run: just verify

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('services/web/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: extractions/setup-just@v1
      - name: Initialize dependencies
        run: just initialize
      - name: Verify formatting and compilation succeeds
        run: just test

  build-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Metadata
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: ghcr.io/${{ github.repository_owner }}/launchpad/web
          tags: |
            type=ref,event=tag
            type=sha
          flavor: |
            latest=${{ github.event_name != 'pull_request' }}
          labels: |
            org.opencontainers.image.title=Launchpad Web
      # Required for the buildx cache export feature to be enabled.
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-web-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-web-
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: services/web
          file: services/web/Dockerfile.prod
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            REACT_APP_KRATOS_BROWSER_URL=http://104.236.121.143:4455/.ory/kratos/public
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # TODO: Enable this in the future
          # cache-from: type=gha
          # cache-to: type=gha
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache