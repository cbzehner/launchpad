name: Web

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    paths:
      - .github/workflows/services-web.yaml
      - services/web/**

defaults:
  run:
    working-directory: services/web

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('services/web/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: extractions/setup-just@v1
      - name: Initialize dependencies
        run: just initialize
      - name: Verify formatting and compilation succeeds
        run: just verify

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('services/web/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: extractions/setup-just@v1
      - name: Initialize dependencies
        run: just initialize
      - name: Verify formatting and compilation succeeds
        run: just test