# HTTP — redirect all traffic to HTTPS
http {
    server {
        listen 80;
        # listen [::]:80 default_server ipv6only=on;

        # Here put the domain name the server is to be known as.
        server_name  launchpad.rs www.launchpad.rs;
        access_log   /dev/stdout  main;
        error_log    /dev/stderr  info;

        # This is for handling the ACME challenge.
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location = /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-agent: SemrushBot\nDisallow: /\n";
        }

        # Use this to force a redirect to the SSL/HTTPS site
        return 301 https://$host$request_uri;
    }
}

# HTTPS service
stream {
    server { # simple reverse-proxy
        # Enable HTTP/2
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name  launchpad.rs www.launchpad.rs;
        access_log   /dev/stdout  main;
        error_log    /dev/stderr  info;

        # Use the Let’s Encrypt certificates
        ssl_certificate /etc/letsencrypt/live/launchpad.rs/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/launchpad.rs/privkey.pem;

        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Use this for proxying to a backend service
        # The HTTPS session is terminated at this Proxy.
        # The back end service will see a simple HTTP service.
        location / {
            proxy_cache_bypass $http_upgrade;

            proxy_pass http://oathkeeper:4455/;

            proxy_redirect off;

            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_ssl_session_reuse off;
        }
    }
}